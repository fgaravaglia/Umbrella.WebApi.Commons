trigger:
  branches:
    include:
      - main
      - release-*
      - feature/*
    # exclude:
    #   - release-candidate
    #   - release-1.0
  paths:
    include:
      - src
    exclude:
      - devops/*

schedules:
  - cron: "0 12 * * 0"
    displayName: Weekly Sunday build
    branches:
      include:
        - main

pool:
  vmImage: "ubuntu-latest"

parameters:
  - name: MajorVersion
    displayName: "Major Version"
    default: 0
  - name: MinorVersion
    displayName: "Minor Version"
    default: 9
  - name: PatchVersion
    displayName: "Patch Version"
    default: 0
  - name: authors
    displayName: "Names of authors of the target package"
    default: "FG"
  - name: company
    displayName: "Company that produces the target package"
    default: "Innova Solutions"
  - name: copyright
    displayName: "Copyright"
    default: "FG 2023"
  - name: SonarScanEnabled
    displayName: "Enable Sonar Scan"
    type: boolean
    default: True
  - name: PublishPackage
    displayName: "Publish Package to Nuget.Org"
    type: boolean
    default: False

variables:
  buildConfiguration: "Release"
  targetFramework: "6.x"
  packageId: Umbrella.WebApi.Commons
  nugetVersion: ${{ parameters.MajorVersion }}.${{ parameters.MinorVersion }}.${{ parameters.PatchVersion }}.$(Build.BuildId)
  testReportFileName: cobertura.xml

stages:
  - stage: Build
    jobs:
      - job: CI
        steps:
          #### use the right version of .Net core
          - task: UseDotNet@2
            displayName: Use .NET CORE target version
            inputs:
              packageType: "sdk"
              version: "6.x"

          - template: .\devops\templates\dotnet-tool-install-coverlet.yaml

          - template: .\devops\templates\dotnet-build.yaml
            parameters:
              projPath: src/Umbrella.WebApi.Commons
              projName: Umbrella.WebApi.Commons
              publishRequired: false

          ############################## PUBLISH DROP #################################
          - task: PublishBuildArtifacts@1
            displayName: publish artifacts
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"

  - stage: PackAndPush
    dependsOn: Build
    jobs:
      - job: NugetPush
        steps:
          - task: DownloadSecureFile@1
            name: nugetOrgKey
            displayName: "Download Nuget Api Key"
            inputs:
              secureFile: "Nuget.apikey.txt"
              retryCount: "5"

          - powershell: |
              $key = Get-Content -Path $(nugetOrgKey.secureFilePath)
              Write-Host "##vso[task.setvariable variable=ReadApiKey;]$key"
            displayName: Get Nuget.org NugetApiKey

          # - powershell: |
          #     Write-Host "Key ==> $(ReadApiKey)"
          #   displayName: Print Nuget.org NugetApiKey

          - template: .\devops\templates\dotnet-package-pack.yaml
            parameters:
              projPath: src/Umbrella.WebApi.Commons
              projName: Umbrella.WebApi.Commons
              MajorVersion: ${{ parameters.MajorVersion }}
              MinorVersion: ${{ parameters.MinorVersion }}
              PatchVersion: ${{ parameters.PatchVersion }}
              buildNumber: $(Build.BuildId)

          - task: DotNetCoreCLI@2
            displayName: Push to Nuget.org
            inputs:
              command: "custom"
              custom: nuget
              arguments: >
                push $(Build.ArtifactStagingDirectory)/*.*.nupkg
                -s https://api.nuget.org/v3/index.json
                -k $(ReadApiKey)
            condition: eq(${{ parameters.PublishPackage }}, true)
